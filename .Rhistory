lapply
x <- list(a = 1.5, b = rnorm(10))
lapply(x, mean)
x <- list(a = 1:5, b = rnorm(10))
lapply(x, mean)
sapply(x, mean)
a <- array(rnorm(2 * 2 * 10), c(2, 2, 10))
a
array(2, c(2, 2, 10))
array(2, 3)
array(2, c(3, 4))
f <- gl(3, 10)
f
?gl
source("https://github.com/davizuku/ProgrammingAssignment2/blob/master/cachematrix.R")
source('C:/Users/David/Dropbox/main/Formacion/Coursera/R Programming/week3/ProgrammingAssignment2/cachematrix.R')
cachedMatrixTest(1000)
log(-1)
x <- 10
y <- print(x)
y
printmessage <- function (x) { if (x > 0) print(" x is greater than zero"); else print("x is less than or equal to zero"); invisible(x);}
printmessage <- function (x) { if (x > 0) print(" x is greater than zero") else print("x is less than or equal to zero") invisible(x);}
printmessage <- function (x) { if (x > 0) { print(" x is greater than zero") } else { print("x is less than or equal to zero") } invisible(x);}
traceback
mean(z)
TRACEBACK()
traceback()
mean(z)
traceback()
lm(z ~ w)
traceback()
debug(lm)
lm(z ~ w)
print (formula)
data
source('C:/Users/David/Dropbox/main/Formacion/Coursera/R Programming/week3/ProgrammingAssignment2/cachematrix.R')
options(error = recover)
read.csv("nosuchfile")
print(file)
quit()
library(datasets)
data(mtcars)
with(mtcars, tapply(mpg, cyl, mean))
tapply(mtcars$mpg, mtcars$cyl, mean)
library(swirl)
install_from_swirl("Getting and Cleaning Data")
swirl()
0
library(swirl)
swirl()
Sys.getlocale("LC_TIME")
library(lubridate)
help(package = lubridate)
this_day <- today()
this_day
year(this_day)
wday(this_day)
wday(this_day, label = TRUE)
this_moment <- now()
this_moment
minute(this_moment)
my_date <- ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
mdy("March 12, 1975")
ymd(25081985)
dmy(25081985)
ymd("192012")
ymd("1920-1-2")
dt1
ymd_hms(dt1)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
this_moment <- update(this_moment, minutes = 53)
this_moment <- update(this_moment, hours = 15, minutes = 53)
this_moment
?now
nyc <- now(tzone = "America/New_York")
nyc
depart <- nyc + days(2)
depart
depart <- update(depart, hours = 17, minutes = 34)
depart
arrive <- depart + hours(5) + minutes(50)
arrive <- depart + hours(15) + minutes(50)
?with_tz
with_tz(arrive, "Asia/Hong_Kong")
arrive <- with_tz(arrive, "Asia/Hong_Kong")
arrive
last_time <- mdy("June 17, 2008", tz = "Singapore")
last_time
last_time <- mdy("June 17, 2008", tz = "Asia/Singapore")
last_time <- mdy("June 17 2008", tz = "Asia/Singapore")
last_time <- mdy("June 17 2008")
last_time
last_time <- ymd("2008-06-17", tz = "Singapore")
last_time
last_time <- ymd("2008-06-17")
last_time
?new_interval
how_long <- new_interval(last_time, arrive)
as.period(how_long)
stopwatch()
setwd("C:/Users/David/Dropbox/main/Formacion/Coursera/Getting and Cleaning Data/project")
source('C:/Users/David/Dropbox/main/Formacion/Coursera/Getting and Cleaning Data/project/run_analysis.R')
actLabels
seq_along(actLabels)
frameLabels <- data.frame(Activity = seq_along(actLabels), Activity_name = actLabels)
frameLabels
head(mData$Activity)
str(mData$Activity)
summary(mData$Activity)
tryData <- join(mData, frameLabels, by="Activity")
?join
??join
library(plyr)
tryData <- join(mData, frameLabels, by="Activity")
head(tryData)
tryData <- join(frameLabels, mData, by="Activity")
head(tryData)
summary(tryData$Activity_name)
actLabels <- read.table("data//UCI HAR Dataset//activity_labels.txt")
actLabels
??join
merge(x = mData, y = actLabels, by.x = Activity, by.y = V1, all = TRUE)
merge(x = mData, y = actLabels, by.x = "Activity", by.y = "V1", all = TRUE)
tryData2 <- merge(x = mData, y = actLabels, by.x = "Activity", by.y = "V1", all = TRUE)
head(tryData2)
tryData2 <- merge(x = actLabels, y = mData, by.x = "V1", by.y = "Activity", all = TRUE)
head(tryData2)
head(tryData2)
?merge
mData <- merge(x = actLabels, y = mData, by.x = "V1", by.y = "Activity", all = TRUE)
names(mData)
rm(mData[,"V1"])
?merge
source('C:/Users/David/Dropbox/main/Formacion/Coursera/Getting and Cleaning Data/project/run_analysis.R', echo=TRUE)
rm(tryData)
rm(tryData2)
rm(frameLabels)
names(mData)
features
source('C:/Users/David/Dropbox/main/Formacion/Coursera/Getting and Cleaning Data/project/run_analysis.R', echo=TRUE)
source('C:/Users/David/Dropbox/main/Formacion/Coursera/Getting and Cleaning Data/project/run_analysis.R', echo=TRUE)
names(mData)
source('C:/Users/David/Dropbox/main/Formacion/Coursera/Getting and Cleaning Data/project/run_analysis.R', echo=TRUE)
names(mData)
?sub
sub("^t", "time", c("tHola", "hoTla"))
mes <- names(mData)
dataNames <- sub("^t", "time", dataNames)
dataNames <- sub("^f", "freq", dataNames)
dataNames <- sub("\\.\\.$", "", dataNames)
dataNames <- sub("\\.\\.", "\\.", dataNames)
dataNames <- names(mData)
dataNames <- sub("^t", "time", dataNames)
dataNames <- sub("^f", "freq", dataNames)
dataNames <- sub("\\.\\.$", "", dataNames)
dataNames <- sub("\\.\\.", "\\.", dataNames)
dataNames
names(mData)
dataNames <- names(mData)
dataNames <- sub("^t", "time", dataNames)
dataNames <- sub("^f", "freq", dataNames)
dataNames <- sub("\\.\\.$", "", dataNames)
dataNames <- sub("\\.\\.\\.", "\\.", dataNames)
dataNames
dataNames <- names(mData)
dataNames <- sub("^t", "time", dataNames)
dataNames <- sub("^f", "freq", dataNames)
dataNames <- sub("\\.\\.$", "", dataNames)
dataNames <- sub("\\.\\.\\.", "\\.", dataNames)
dataNames <- sub("\\.mean", "Mean", dataNames)
dataNames <- sub("\\.std", "Std", dataNames)
dataNames
names(mData) <- dataNames
??select
??sumarize
?summarize
??sumarize
finalData <- mData %>% group_by(Activity, Subject) %>% summarize(mean())
library(dplyr)
finalData <- mData %>% group_by(Activity, Subject) %>% summarize(mean())
finalData <- mData %>% group_by(Activity, Subject) %>% summarize(timeBodyAccMean.Y = mean(timeBodyAccMean.Y))
finalData
?aggregate
?ddply
?group_by
?ddply
finalData <- arrange(group_by(mData, Activity, Subject), FUN=mean())
finalData <- arrange(group_by(mData, Activity, Subject), FUN=mean
)
finalData <- arrange(group_by(mData, Activity, Subject), FUN=mean)
?aggregate
finalData <- aggregate(group_by(mData, Activity, Subject), FUN=mean)
finalData <- aggregate(mData, by = c("Activity", "Subject"), FUN=mean)
finalData <- aggregate(mData, by = list("Activity", "Subject"), FUN=mean)
?ddply
ddply(mData, c(.(Activity), .(Subject)), summarize, .fun = mean)
ddply(mData, c(.(Activity), .(Subject)), summarize, .fun = mean, .parallel = TRUE)
head(ddply(mData, c(.(Activity), .(Subject)), summarize, .fun = mean)
head(ddply(mData, c(.(Activity), .(Subject)), summarize, .fun = mean))
head(ddply(mData, c(.(Activity), .(Subject)), summarize, .fun = mean))
?merge
head(ddply(mData, c(.(Activity), .(Subject)), summarize, .fun = mean))
?ddply
head(ddply(mData, c(.(Activity), .(Subject)), numcolwise(mean)))
source('C:/Users/David/Dropbox/main/Formacion/Coursera/Getting and Cleaning Data/project/run_analysis.R', echo=TRUE)
?write.table
write.table(finalData, row.name = FALSE)
write.table(finalData, file = "finalData.txt", row.name = FALSE)
